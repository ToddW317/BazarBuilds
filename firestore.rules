rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /builds/{buildId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
                   (request.resource.data.diff(resource.data).affectedKeys()
                   .hasOnly(['likes', 'likedBy']) || 
                   request.auth.uid == resource.data.userId);
    }
    
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
    }

    match /comments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
                   ((request.resource.data.diff(resource.data).affectedKeys()
                   .hasOnly(['likes', 'likedBy'])) || 
                   request.auth.uid == resource.data.userId);
      allow delete: if request.auth != null && 
                   request.auth.uid == resource.data.userId;
    }

    match /ratings/{ratingId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    match /notifications/{notificationId} {
      allow read: if request.auth != null && 
                 resource.data.userId == request.auth.uid;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
                   resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && 
                   resource.data.userId == request.auth.uid;
    }
  }
} 